{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Richard\\\\Desktop\\\\potluck-planner-8\\\\front-end\\\\potluck-planner\\\\src\\\\components\\\\AddEvent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axiosWithAuth from '../utilities/axiosWithAuth';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddEvent() {\n  _s();\n\n  const {\n    push\n  } = useHistory();\n  const {\n    id\n  } = useParams();\n  const [formValues, setFormValues] = useState({\n    potluck_name: '',\n    potluck_description: '',\n    potluck_date: '',\n    potluck_time: '',\n    potluck_location: ''\n  });\n  const [itemValues, setItemValues] = useState([{\n    potluck_item: ''\n  }]);\n  useEffect(() => {\n    axiosWithAuth().get(`/potlucks/${id}`).then(res => {\n      setFormValues(res.data);\n    }).catch(err => {\n      console.log({\n        err\n      });\n    });\n  }, [id]);\n\n  const handleChange = e => {\n    setFormValues({ ...formValues,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  let onChange = (i, e) => {\n    let newFormValues = [...itemValues];\n    newFormValues[i][e.target.name] = e.target.value;\n    setFormValues(newFormValues);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    axiosWithAuth().post(`/potlucks`, formValues, itemValues).then(res => {\n      setFormValues(res.data);\n      push('/upcomingevents');\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"potluck_name\",\n      children: \"Potluck Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"potluck_name\",\n      value: formValues.potluck_name,\n      name: \"potluck_name\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"potluck_time\",\n      children: \"Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"potluck_description\",\n      children: \"Potluck Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"potluck_description\",\n      value: formValues.potluck_description,\n      name: \"potluck_description\",\n      type: \"text\",\n      onChange: handleChange,\n      rows: \"10\",\n      cols: \"40\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"time\",\n      value: formValues.potluck_time,\n      name: \"potluck_time\",\n      type: \"time\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"potluck_date\",\n      children: \"Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"date\",\n      value: formValues.potluck_date,\n      name: \"potluck_date\",\n      type: \"date\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"potluck_location\",\n      children: \"Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"potluck_location\",\n      value: formValues.potluck_location,\n      name: \"potluck_location\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 14\n    }, this), itemValues.map((element, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-inline\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Item to bring\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"potluck_item\",\n        value: element.potluck_item || \"\",\n        onChange: e => onChange(index, e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }, this), index ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"button remove\",\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }, this) : null]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Save Changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddEvent, \"bz8ect1GfYv642lv1hy9g/LC7FY=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = AddEvent;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEvent\");","map":{"version":3,"sources":["C:/Users/Richard/Desktop/potluck-planner-8/front-end/potluck-planner/src/components/AddEvent.js"],"names":["React","useState","useEffect","axiosWithAuth","useHistory","useParams","AddEvent","push","id","formValues","setFormValues","potluck_name","potluck_description","potluck_date","potluck_time","potluck_location","itemValues","setItemValues","potluck_item","get","then","res","data","catch","err","console","log","handleChange","e","target","name","value","onChange","i","newFormValues","handleSubmit","preventDefault","post","map","element","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axiosWithAuth from '../utilities/axiosWithAuth';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nexport default function AddEvent() {\r\n    const { push } = useHistory();\r\n    const { id } = useParams();\r\n\r\n  \r\n    const [formValues, setFormValues] = useState({\r\n        potluck_name: '',\r\n        potluck_description:'',\r\n        potluck_date: '',\r\n        potluck_time: '',\r\n        potluck_location: '',\r\n    });\r\n    const [itemValues, setItemValues] = useState([{potluck_item: ''}])\r\n\r\n    useEffect(() => {\r\n        axiosWithAuth().get(`/potlucks/${id}`)\r\n            .then(res => {\r\n                setFormValues(res.data);\r\n            })\r\n            .catch(err => {console.log({ err })\r\n            })\r\n    },[id])\r\n\r\n    const handleChange = (e) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    let onChange = (i, e) => {\r\n      let newFormValues = [...itemValues];\r\n      newFormValues[i][e.target.name] = e.target.value;\r\n      setFormValues(newFormValues);\r\n   }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        axiosWithAuth().post(`/potlucks`, formValues, itemValues)\r\n        .then(res => {\r\n            setFormValues(res.data)\r\n            push('/upcomingevents')\r\n        })\r\n        .catch(err => console.log(err))\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <label htmlFor= 'potluck_name'>Potluck Name</label>\r\n             <input\r\n                id='potluck_name'\r\n                value={formValues.potluck_name}\r\n                name='potluck_name'\r\n                onChange={handleChange}\r\n                />\r\n            <label htmlFor= 'potluck_time'>Time</label>\r\n            <label htmlFor= 'potluck_description'>Potluck Description</label>\r\n            <textarea\r\n                id='potluck_description'\r\n                value={formValues.potluck_description}\r\n                name='potluck_description'\r\n                type='text'\r\n                onChange={handleChange}\r\n                rows='10'\r\n                cols='40'\r\n             />\r\n             <input \r\n                id='time'\r\n                value={formValues.potluck_time}\r\n                name='potluck_time'\r\n                type='time'\r\n                onChange={handleChange}\r\n                />\r\n            <label htmlFor='potluck_date'>Date</label>\r\n             <input \r\n                id='date'\r\n                value={formValues.potluck_date}\r\n                name='potluck_date'\r\n                type='date'\r\n                onChange={handleChange}\r\n             />\r\n            <label htmlFor='potluck_location'>Location</label> \r\n             <input\r\n                id='potluck_location'\r\n                value={formValues.potluck_location}\r\n                name='potluck_location'\r\n                onChange={handleChange}\r\n             />\r\n           {itemValues.map((element, index) => (\r\n            <div className=\"form-inline\" key={index}>\r\n            <label>Item to bring</label>\r\n              <input \r\n                  type=\"text\" \r\n                  name=\"potluck_item\" \r\n                  value={element.potluck_item || \"\"} \r\n                  onChange={e => onChange(index, e)} />\r\n              \r\n              {\r\n                index ? \r\n                  <button type=\"button\"  className=\"button remove\" >Remove</button> \r\n                : null\r\n              }\r\n            </div>\r\n          ))}\r\n             <br/>\r\n            <button>Save Changes</button>\r\n            \r\n        </form>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}