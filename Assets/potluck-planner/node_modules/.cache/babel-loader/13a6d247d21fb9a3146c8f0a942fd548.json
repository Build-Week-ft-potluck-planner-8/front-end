{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Richard\\\\Desktop\\\\potluck-planner-8\\\\front-end\\\\potluck-planner\\\\src\\\\components\\\\AddEvent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from 'react';\nimport axiosWithAuth from '../utilities/axiosWithAuth';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddEvent() {\n  _s();\n\n  const {\n    push\n  } = useHistory();\n  const [formValues, setFormValues] = useState([{\n    potluck_name: '',\n    potluck_description: '',\n    potluck_date: '',\n    potluck_time: '',\n    potluck_location: '',\n    potluck_item: ''\n  }]);\n\n  const handleChange = e => {\n    setFormValues({ ...formValues,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleAddItemField = () => {\n    const values = [formValues];\n    values.push({\n      potluck_name: '',\n      potluck_description: '',\n      potluck_date: '',\n      potluck_time: '',\n      potluck_location: '',\n      potluck_item: ''\n    });\n    setFormValues(values);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    axiosWithAuth().post(`/potlucks`, formValues).then(res => {\n      console.log(res);\n      push('/upcomingevents');\n    }).catch(err => console.log({\n      err\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"addEventForm\",\n    onSubmit: handleSubmit,\n    children: [formValues.map(value => /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"potluck_name\",\n        children: \"Potluck Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"potluck_name\",\n        value: formValues.potluck_name,\n        name: \"potluck_name\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"potluck_time\",\n        children: \"Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"potluck_description\",\n        children: \"Potluck Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"potluck_description\",\n        value: formValues.potluck_description,\n        name: \"potluck_description\",\n        type: \"text\",\n        onChange: handleChange,\n        rows: \"10\",\n        cols: \"40\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"potluck_time\",\n        children: \"Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"potluck_time\",\n        value: formValues.potluck_time,\n        name: \"potluck_time\",\n        type: \"time\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"potluck_date\",\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"potluck_date\",\n        value: formValues.potluck_date,\n        name: \"potluck_date\",\n        type: \"date\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"potluck_location\",\n        children: \"Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"potluck_location\",\n        value: formValues.potluck_location,\n        name: \"potluck_location\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"potluckItemContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"potluck_item\",\n          children: \"Item to bring\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"potluck_item\",\n          value: formValues.potluck_item,\n          name: \"potluck_item\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"addRow\",\n          type: \"button\",\n          onClick: () => handleAddItemField,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, `${value}`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Create Potluck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 8\n  }, this);\n}\n\n_s(AddEvent, \"Vl3OpmEHM/jUMzaHVyxXSc743lU=\", false, function () {\n  return [useHistory];\n});\n\n_c = AddEvent;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEvent\");","map":{"version":3,"sources":["C:/Users/Richard/Desktop/potluck-planner-8/front-end/potluck-planner/src/components/AddEvent.js"],"names":["React","useState","Fragment","axiosWithAuth","useHistory","AddEvent","push","formValues","setFormValues","potluck_name","potluck_description","potluck_date","potluck_time","potluck_location","potluck_item","handleChange","e","target","name","value","handleAddItemField","values","handleSubmit","preventDefault","post","then","res","console","log","catch","err","map"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from 'react';\r\nimport axiosWithAuth from '../utilities/axiosWithAuth';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function AddEvent() {\r\n    const { push } = useHistory();\r\n\r\n    const [formValues, setFormValues] = useState([{\r\n        potluck_name: '',\r\n        potluck_description:'',\r\n        potluck_date: '',\r\n        potluck_time: '',\r\n        potluck_location: '',\r\n        potluck_item:''\r\n    }]);\r\n    \r\n    const handleChange = (e) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleAddItemField = () => {\r\n        const values = [formValues];\r\n        values.push({ \r\n            potluck_name: '',\r\n            potluck_description:'',\r\n            potluck_date: '',\r\n            potluck_time: '',\r\n            potluck_location: '',\r\n            potluck_item:''});\r\n        setFormValues(values);\r\n    }\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        axiosWithAuth().post(`/potlucks`, formValues)\r\n        .then(res => {\r\n            console.log(res)\r\n            push('/upcomingevents')\r\n        })\r\n        .catch(err => console.log({ err }))\r\n    }\r\n    \r\n    return (\r\n       \r\n       <form id='addEventForm' onSubmit={handleSubmit}> \r\n                    {formValues.map((value) => (\r\n        <Fragment key={`${value}`}>\r\n            <label htmlFor= 'potluck_name'>Potluck Name</label>\r\n             <input\r\n                id='potluck_name'\r\n                value={formValues.potluck_name}\r\n                name='potluck_name'\r\n                onChange={handleChange}\r\n                />\r\n            <label htmlFor= 'potluck_time'>Time</label>\r\n            <label htmlFor= 'potluck_description'>Potluck Description</label>\r\n             <textarea\r\n                id='potluck_description'\r\n                value={formValues.potluck_description}\r\n                name='potluck_description'\r\n                type='text'\r\n                onChange={handleChange}\r\n                rows='10'\r\n                cols='40'\r\n                />\r\n            <label htmlFor='potluck_time'>Time</label> \r\n             <input \r\n                id='potluck_time'\r\n                value={formValues.potluck_time}\r\n                name='potluck_time'\r\n                type='time'\r\n                onChange={handleChange}\r\n                />\r\n            <label htmlFor='potluck_date'>Date</label>\r\n             <input \r\n                id='potluck_date'\r\n                value={formValues.potluck_date}\r\n                name='potluck_date'\r\n                type='date'\r\n                onChange={handleChange}\r\n             />\r\n            <label htmlFor='potluck_location'>Location</label> \r\n             <input\r\n                id='potluck_location'\r\n                value={formValues.potluck_location}\r\n                name='potluck_location'\r\n                onChange={handleChange}\r\n             />\r\n        <div className='potluckItemContainer'>\r\n            <label htmlFor='potluck_item'>Item to bring</label>\r\n             <input\r\n                id='potluck_item'\r\n                value={formValues.potluck_item}  \r\n                name='potluck_item'\r\n                onChange={handleChange}\r\n                />\r\n                <button className='addRow' type='button' onClick={() => handleAddItemField}>+</button>\r\n        </div>\r\n                </Fragment>\r\n                ))}\r\n            <button>Create Potluck</button>\r\n        </form>\r\n    \r\n        )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}