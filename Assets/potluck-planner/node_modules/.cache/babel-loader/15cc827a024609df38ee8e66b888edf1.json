{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Richard\\\\Desktop\\\\potluck-planner-8\\\\front-end\\\\potluck-planner\\\\src\\\\components\\\\AddEvent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from 'react';\nimport axiosWithAuth from '../utilities/axiosWithAuth';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddEvent() {\n  _s();\n\n  const [inputFields, setInputFields] = useState([{\n    potluck_name: '',\n    potluck_description: '',\n    potluck_date: '',\n    potluck_time: '',\n    potluck_location: '',\n    potluck_item: ''\n  }]);\n\n  const handleAddFields = () => {\n    const values = [...inputFields];\n    values.push({\n      potluck_item: ''\n    });\n    setInputFields(values);\n  };\n\n  const handleRemoveFields = index => {\n    const values = [...inputFields];\n    values.splice(index, 1);\n    setInputFields(values);\n  };\n\n  const handleInputChange = (index, event) => {\n    const values = [...inputFields];\n\n    if (event.target.name === \"firstName\") {\n      values[index].firstName = event.target.value;\n    } else {\n      values[index].lastName = event.target.value;\n    }\n\n    setInputFields(values);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"inputFields\", inputFields);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dynamic Form Fields in React\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: inputFields.map((inputField, index) => /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"potluck_name\",\n            children: \"Potluck Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"potluck_name\",\n            value: inputField.potluck_name,\n            name: \"potluck_name\",\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"potluck_time\",\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"potluck_description\",\n            children: \"Potluck Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"potluck_description\",\n            value: inputField.potluck_description,\n            name: \"potluck_description\",\n            type: \"text\",\n            onChange: handleInputChange,\n            rows: \"10\",\n            cols: \"40\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"time\",\n            value: inputField.potluck_time,\n            name: \"potluck_time\",\n            type: \"time\",\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"potluck_date\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"date\",\n            value: inputField.potluck_date,\n            name: \"potluck_date\",\n            type: \"date\",\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"potluck_location\",\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"potluck_location\",\n            value: inputField.potluck_location,\n            name: \"potluck_location\",\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"potluck_item\",\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"potluck_item\",\n            value: inputField.potluck_item,\n            name: \"potluck_item\",\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleAddFields,\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 14\n          }, this)]\n        }, `${inputField}~${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit-button\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mr-2\",\n          type: \"submit\",\n          onSubmit: handleSubmit,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(inputFields, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AddEvent, \"Epxq6oVZMf5wbckINkbHhv48LIU=\");\n\n_c = AddEvent;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEvent\");","map":{"version":3,"sources":["C:/Users/Richard/Desktop/potluck-planner-8/front-end/potluck-planner/src/components/AddEvent.js"],"names":["React","useState","Fragment","axiosWithAuth","useHistory","AddEvent","inputFields","setInputFields","potluck_name","potluck_description","potluck_date","potluck_time","potluck_location","potluck_item","handleAddFields","values","push","handleRemoveFields","index","splice","handleInputChange","event","target","name","firstName","value","lastName","handleSubmit","e","preventDefault","console","log","map","inputField","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from 'react';\r\nimport axiosWithAuth from '../utilities/axiosWithAuth';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function AddEvent() {\r\n    const [inputFields, setInputFields] = useState([\r\n      {  potluck_name: '', potluck_description:'', potluck_date: '',potluck_time: '', potluck_location: '', potluck_item:''}\r\n      ]);\r\n    \r\n      const handleAddFields = () => {\r\n        const values = [...inputFields];\r\n        values.push({ potluck_item:'' });\r\n        setInputFields(values);\r\n      };\r\n    \r\n      const handleRemoveFields = index => {\r\n        const values = [...inputFields];\r\n        values.splice(index, 1);\r\n        setInputFields(values);\r\n      };\r\n    \r\n      const handleInputChange = (index, event) => {\r\n        const values = [...inputFields];\r\n        if (event.target.name === \"firstName\") {\r\n          values[index].firstName = event.target.value;\r\n        } else {\r\n          values[index].lastName = event.target.value;\r\n        }\r\n    \r\n        setInputFields(values);\r\n      };\r\n    \r\n      const handleSubmit = e => {\r\n        e.preventDefault();\r\n        console.log(\"inputFields\", inputFields);\r\n      };\r\n    \r\n      return (\r\n        <>\r\n          <h1>Dynamic Form Fields in React</h1>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"form-row\">\r\n              {inputFields.map((inputField, index) => (\r\n                <Fragment key={`${inputField}~${index}`}>\r\n                  <label htmlFor= 'potluck_name'>Potluck Name</label>\r\n             <input\r\n                id='potluck_name'\r\n                value={inputField.potluck_name}\r\n                name='potluck_name'\r\n                onChange={handleInputChange}\r\n                />\r\n            <label htmlFor= 'potluck_time'>Time</label>\r\n            <label htmlFor= 'potluck_description'>Potluck Description</label>\r\n            <textarea\r\n                id='potluck_description'\r\n                value={inputField.potluck_description}\r\n                name='potluck_description'\r\n                type='text'\r\n                onChange={handleInputChange}\r\n                rows='10'\r\n                cols='40'\r\n             />\r\n             <input \r\n                id='time'\r\n                value={inputField.potluck_time}\r\n                name='potluck_time'\r\n                type='time'\r\n                onChange={handleInputChange}\r\n                />\r\n            <label htmlFor='potluck_date'>Date</label>\r\n             <input \r\n                id='date'\r\n                value={inputField.potluck_date}\r\n                name='potluck_date'\r\n                type='date'\r\n                onChange={handleInputChange}\r\n             />\r\n            <label htmlFor='potluck_location'>Location</label> \r\n             <input\r\n                id='potluck_location'\r\n                value={inputField.potluck_location}\r\n                name='potluck_location'\r\n                onChange={handleInputChange}\r\n             />\r\n              <label htmlFor='potluck_item'>Location</label> \r\n             <input\r\n                id='potluck_item'\r\n                value={inputField.potluck_item}\r\n                name='potluck_item'\r\n                onChange={handleInputChange}\r\n             />\r\n             <button type='button' onClick={handleAddFields}>+</button>\r\n                </Fragment>\r\n              ))}\r\n            </div>\r\n            <div className=\"submit-button\">\r\n              <button\r\n                className=\"btn btn-primary mr-2\"\r\n                type=\"submit\"\r\n                onSubmit={handleSubmit}\r\n              >\r\n                Save\r\n              </button>\r\n            </div>\r\n            <br/>\r\n            <pre>\r\n              {JSON.stringify(inputFields, null, 2)}\r\n            </pre>\r\n          </form>\r\n        </>\r\n      );\r\n    };\r\n  \r\n        \r\n        \r\n    \r\n"]},"metadata":{},"sourceType":"module"}